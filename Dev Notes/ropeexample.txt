An example rope sort of the clause [1, 2, 3]

This is similar to a Trie data structure in that each subdictionary is accessed by pruning a character off the "string".

However, one difference of note here is that any of the terminals could be the next character so you can access any clause, [a, b, c], by consulting the data structure rope[a][b][c][0] for any order of a, b, and c.

Note that here 0 is the marker to indicate the end of the clause.


[1, 2, 3]

{
    "1": {
        "2": {
            "3": {
                "0": [1, 2, 3]
            }
        },
        "3": {
            "0": [1, 2, 3]
        }
    },
    "2": {
        "1": {
            "3": {
                "0": [1, 2, 3]
            }
        },
        "2": {
            "0": [1, 2, 3]
        }
    },
    "3": {
        "1": {
            "2": {
                "0": [1, 2, 3]
            }
        },
        "2": {
            "1": {
                "0": [1, 2, 3]
            }
        }
    }
}